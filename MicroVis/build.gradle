apply plugin: 'cpp'

model {
    repositories {
            libs(PrebuiltLibraries) {
                    sfml {
                        headers.srcDir "../SFML-2.4.2/include"
                    }
            }
    }

    components {
        MicroVis(NativeExecutableSpec) {
            binaries.all {
                cppCompiler.define "SFML_STATIC"
                if (toolChain in Gcc) {
                    cppCompiler.args '-Wall', '-MD', '-g'
                    linker.args '-ljpeg', '-lpthread', '-lXrandr', '-lX11', '-lGL', '-ludev', '-lsfml-graphics', '-lsfml-window', '-lsfml-system'
                }
                if (toolChain in VisualCpp) {
                    cppCompiler.args '-Wall', '-MD', '-Zi'
                    cppCompiler.define 'DEBUG'
                    linker.args '-DEBUG', 'sfml-graphics-s-d.lib', 'sfml-window-s-d.lib', 'sfml-system-s-d.lib', 'opengl32', 'winmm', 'gdi32', 'freetype', 'jpeg'
                }
            }
            sources {
                cpp {
                    source {
                        srcDir "src/MicroVis"
                        include "**/*.cpp"
                    }

                    exportedHeaders {
                        srcDir 'include'
                    }

                    lib library: "sfml", linkage: "api"
                }
            }
        }
    }
}