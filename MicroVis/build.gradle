apply plugin: 'cpp'

model {
	repositories {
        libs(PrebuiltLibraries) {
            sfml {
                headers.srcDir "../SFML-2.4.2/include"
            }

            def libDir = "../SFML-2.4.2/lib/"
            def libPrefix = "lib"
            def libSuffix = ".so"
            if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
            	libPrefix = ""
				libSuffix = ".lib"
			}

            sfmlgraphics {
                binaries.withType(PrebuiltSharedLibraryBinary) {
                    sharedLibraryFile = file(libDir + libPrefix + 'sfml-graphics' + libSuffix)
                }
            }

            sfmlwindow {
                binaries.withType(PrebuiltSharedLibraryBinary) {
                    sharedLibraryFile = file(libDir + libPrefix + 'sfml-window' + libSuffix)
                }
            }

            sfmlsystem {
                binaries.withType(PrebuiltSharedLibraryBinary) {
                    sharedLibraryFile = file(libDir + libPrefix + 'sfml-system' + libSuffix)
                }
            }
        }
	}

    components {
		MicroVis(NativeExecutableSpec) {
			binaries.all {
				cppCompiler.args '-Wall'
			}
			sources {
				cpp {
					source {
						srcDir "src/MicroVis"
						include "**/*.cpp"
					}

					exportedHeaders {
						srcDir 'include'
					}

					lib library: "sfml", linkage: "api"
					lib library: "sfmlgraphics"
					lib library: "sfmlwindow"
					lib library: "sfmlsystem"
				}
			}
		}
	}
}